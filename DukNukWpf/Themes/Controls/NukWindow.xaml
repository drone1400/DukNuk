<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:controls="clr-namespace:DukNuk.Wpf.Controls"
                    xmlns:converters="clr-namespace:DukNuk.Wpf.Themes.Converters"
                    mc:Ignorable="d">
    <d:ResourceDictionary.MergedDictionaries>
        <ResourceDictionary
            Source="pack://application:,,,/DukNukWpf;component/Themes/ThemeColors/DefaultBlue.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/DukNukWpf;component/Themes/ThemeSizes.xaml" />
    </d:ResourceDictionary.MergedDictionaries>

    
    <converters:NukWindowContentVisibilityConverter x:Key="DukNuk.Converter.Window.ContentVisibility"/>

    <Style
        x:Key="DukNuk.Style.NukWindow.TitleBarButton"
        TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />

        <Setter Property="Width" Value="{DynamicResource DukNuk.Size.TitleBar.ButtonSize}" />
        <Setter Property="Height" Value="{DynamicResource DukNuk.Size.TitleBar.ButtonSize}" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Padding" Value="0" />

        <Setter Property="FontSize" Value="{DynamicResource DukNuk.Size.TitleBar.ButtonFontSize}" />
        <Setter Property="FontFamily" Value="Webdings" />
        <Setter Property="Foreground" Value="{DynamicResource DukNuk.Colors.Brush.TitleBar.Button.Foreground}" />
        <Setter Property="Background" Value="{DynamicResource DukNuk.Colors.Brush.TitleBar.Button.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource DukNuk.Colors.Brush.TitleBar.Button.BorderBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Focusable" Value="False" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse
                            Stroke="{TemplateBinding BorderBrush}"
                            StrokeThickness="{TemplateBinding BorderThickness}"
                            Fill="{TemplateBinding Background}">
                        </Ellipse>
                        <ContentPresenter Focusable="False"
                                          RecognizesAccessKey="True"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Background"
                                    Value="{DynamicResource DukNuk.Colors.Brush.TitleBar.Button.Background.MouseOver}" />
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource DukNuk.Colors.Brush.Border.KeyboardFocus}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background"
                                    Value="{DynamicResource DukNuk.Colors.Brush.TitleBar.Button.Background.MouseOver}" />
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource DukNuk.Colors.Brush.Border.MouseOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background"
                                    Value="{DynamicResource DukNuk.Colors.Brush.TitleBar.Button.Background.Pressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background"
                                    Value="{DynamicResource DukNuk.Colors.Brush.TitleBar.Button.Background.Disabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate 
        x:Key="DukNuk.Template.NukWindow"
        TargetType="{x:Type controls:NukWindow}">
        <Border Name="PART_windowGlowBorder"
                BorderThickness="0"
                CornerRadius="20"
                Padding="{TemplateBinding Padding}"
                Effect="{DynamicResource DukNuk.Colors.Glow.Window}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Path
                    Grid.Row="0" Grid.RowSpan="2"
                    Name="PART_backgroundLayer1"
                    Width="Auto" Height="Auto"
                    Data="M 0,0 L 500,0 L 500, 500 L 0, 500 Z"
                    Fill="{DynamicResource DukNuk.Colors.Brush.WindowBackground.Light}" />

                <Path
                    Grid.Row="0" Grid.RowSpan="2"
                    Name="PART_backgroundLayer2"
                    Width="Auto" Height="Auto"
                    Data="M 0,0 L 500,0 L 500, 500 L 0, 500 Z"
                    Fill="{DynamicResource DukNuk.Colors.Brush.WindowBackground.Medium}"
                    Effect="{DynamicResource DukNuk.Colors.Glow.Window.Shadow}" />

                <!-- Content - NOTE: margin should be set in code behind according to path calculations... -->
                <Grid Grid.Row="0" Grid.RowSpan="2"
                      Name="PART_windowContent">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    
                    <Grid
                        Grid.Row="0"
                        x:Name="GridMenuUnderTitleBar"
                        Margin="0,0,0,4"
                        Visibility="{TemplateBinding MenuContent, Converter={StaticResource DukNuk.Converter.Window.ContentVisibility}}">
                        <AdornerDecorator>
                            <ContentPresenter
                                ContentSource="MenuContent"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </AdornerDecorator>
                    </Grid>
                    
                    <Border
                        Grid.Row="1"
                        CornerRadius="{DynamicResource DukNuk.Size.Window.Content.CornerRadius}"
                        BorderThickness="{DynamicResource DukNuk.Size.Window.Content.BorderThickness}"
                        BorderBrush="{DynamicResource DukNuk.Colors.Brush.Border.Light}"
                        Background="{DynamicResource DukNuk.Colors.Brush.WindowBackground.Dark}">
                        <AdornerDecorator>
                            <ContentPresenter
                                ContentSource="Content"
                                Focusable="False"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </AdornerDecorator>
                    </Border>
                    
                    <Border
                        Grid.Row="2"
                        CornerRadius="{DynamicResource DukNuk.Size.Window.StatusBar.CornerRadius}"
                        BorderThickness="{DynamicResource DukNuk.Size.Window.StatusBar.BorderThickness}"
                        Margin="{DynamicResource DukNuk.Size.Window.StatusBar.Margin}"
                        BorderBrush="{DynamicResource DukNuk.Colors.Brush.Border.Light}"
                        Background="{DynamicResource DukNuk.Colors.Brush.WindowBackground.Dark}"
                        Visibility="{TemplateBinding StatusBarContent, Converter={StaticResource DukNuk.Converter.Window.ContentVisibility}}">
                        <AdornerDecorator>
                            <ContentPresenter
                                ContentSource="StatusBarContent"
                                Focusable="False"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </AdornerDecorator>
                    </Border>
                </Grid>
                

                <!-- Title Bar -->
                <Grid Grid.Row="0" Height="{TemplateBinding TitleZoneHeight}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <!-- Title bar text - NOTE: margin should be set in code behind according to path calculations... -->
                    <TextBlock
                        Grid.Row="0" Grid.RowSpan="2"
                        Grid.Column="0" Grid.ColumnSpan="2"
                        Name="PART_windowTitle"
                        Text="{TemplateBinding Title}"
                        Background="Transparent"
                        Foreground="{DynamicResource DukNuk.Colors.Brush.Text.Light}"
                        FontSize="18"
                        VerticalAlignment="Center" />


                    <!-- Title bar buttons - NOTE: margin should be set in code behind according to path calculations... -->
                    <StackPanel
                        Grid.Row="0" Grid.RowSpan="2"
                        Grid.Column="1"
                        Name="PART_windowTitleBarButtons"
                        Orientation="Horizontal"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Background="Transparent">

                        <!-- <Button x:Name="PART_focusButton" BorderThickness="0" Background="Transparent" Foreground="Transparent" BorderBrush="Transparent" /> -->

                        <Button Name="PART_minimizeButton"
                                WindowChrome.IsHitTestVisibleInChrome="True"
                                Style="{DynamicResource DukNuk.Style.NukWindow.TitleBarButton}"
                                Content="0" />
                        <Button Name="PART_maximizeButton"
                                WindowChrome.IsHitTestVisibleInChrome="True"
                                Style="{DynamicResource DukNuk.Style.NukWindow.TitleBarButton}"
                                Content="1" />
                        <Button Name="PART_closeButton"
                                WindowChrome.IsHitTestVisibleInChrome="True"
                                Style="{DynamicResource DukNuk.Style.NukWindow.TitleBarButton}"
                                Content="r" />
                    </StackPanel>
                    
                    <Grid
                        Grid.Row="1" Grid.Column="0"
                        x:Name="GridMenuOnTitleBar"
                        Height="{TemplateBinding TitleMenuZoneHeight}"
                        Margin="0"
                        Visibility="{TemplateBinding MenuContent, Converter={StaticResource DukNuk.Converter.Window.ContentVisibility}}">
                        <AdornerDecorator>
                            <ContentPresenter
                                ContentSource="MenuContent"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </AdornerDecorator>
                    </Grid>
                </Grid>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="WindowState" Value="Maximized">
                <Setter Property="Content" TargetName="PART_maximizeButton"
                        Value="2" />
                <Setter Property="Margin"
                        Value="0" />
                <Setter Property="Padding"
                        Value="0" />
                <Setter Property="FirstLayerPadding"
                        Value="0" />
                <Setter Property="SecondLayerPadding"
                        Value="0" />
                <Setter Property="CornerRadius" TargetName="PART_windowGlowBorder"
                        Value="0" />
                <Setter Property="BorderThickness" TargetName="PART_windowGlowBorder"
                        Value="{DynamicResource DukNuk.Size.Window.GlowBorderThickness}" />
                <Setter Property="Effect" TargetName="PART_windowGlowBorder"
                        Value="{x:Null}" />
            </Trigger>
            
            <Trigger Property="MenuPosition" Value="OnTitleBar">
                <Setter Property="VerticalAlignment" Value="Top" TargetName="PART_windowTitle"/>
            </Trigger>
            
            <Trigger Property="TitlePosition" Value="Top">
                <Setter Property="VerticalAlignment" Value="Top" TargetName="PART_windowTitle"/>
            </Trigger>
            
            <Trigger Property="MenuPosition" Value="UnderTitleBar">
                <Setter Property="Visibility" Value="Collapsed" TargetName="GridMenuOnTitleBar"/>
            </Trigger>
            
            <Trigger Property="MenuPosition" Value="OnTitleBar">
                <Setter Property="Visibility" Value="Collapsed" TargetName="GridMenuUnderTitleBar"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="controls:NukWindow">

        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource DukNuk.Colors.Brush.Text.Light}" />
        <Setter Property="ResizeMode" Value="CanResize" />

        <Setter Property="Padding" Value="8,8,8,12" />
        <Setter Property="MinWidth" Value="480" />
        <Setter Property="MinHeight" Value="240" />
        
        <Setter Property="FontSize" Value="13" />

        <Setter Property="TitleZoneHeight" Value="{DynamicResource DukNuk.Size.TitleBar.Height}" />
        <Setter Property="QuadBezierRadius" Value="{DynamicResource DukNuk.Size.TitleBar.QuadraticBezierRadius}" />

        <Setter Property="TitleGapLeft" Value="{DynamicResource DukNuk.Size.TitleBar.BezierLeft.Gap}" />
        <Setter Property="TitleBezierLeftWidth" Value="{DynamicResource DukNuk.Size.TitleBar.BezierLeft.Width}" />
        <Setter Property="TitleBezierLeftHeight" Value="{DynamicResource DukNuk.Size.TitleBar.BezierLeft.Height}" />
        <Setter Property="TitleBezierLeftOffset" Value="{DynamicResource DukNuk.Size.TitleBar.BezierLeft.Offset}" />

        <Setter Property="TitleGapRight" Value="{DynamicResource DukNuk.Size.TitleBar.BezierRight.Gap}" />
        <Setter Property="TitleBezierRightWidth" Value="{DynamicResource DukNuk.Size.TitleBar.BezierRight.Width}" />
        <Setter Property="TitleBezierRightHeight" Value="{DynamicResource DukNuk.Size.TitleBar.BezierRight.Height}" />
        <Setter Property="TitleBezierRightOffset" Value="{DynamicResource DukNuk.Size.TitleBar.BezierRight.Offset}" />

        <Setter Property="TitleCornerRightWidth" Value="{DynamicResource DukNuk.Size.TitleBar.CornerRight.Width}" />
        <Setter Property="TitleCornerRightHeight" Value="{DynamicResource DukNuk.Size.TitleBar.CornerRight.Height}" />
        <Setter Property="TitleCornerRightQuadBezierRadius"
                Value="{DynamicResource DukNuk.Size.TitleBar.CornerRight.QuadraticBezierRadius}" />
        
        <Setter Property="ResizeBorderThickness" Value="{DynamicResource DukNuk.Size.Window.ResizeBorderThickness}" />
        
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template" Value="{DynamicResource DukNuk.Template.NukWindow}" />
    </Style>
</ResourceDictionary>