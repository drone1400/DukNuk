<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:controls="clr-namespace:DukNuk.Wpf.Controls"
                    xmlns:converters="clr-namespace:DukNuk.Wpf.Themes.Converters"
                    mc:Ignorable="d">
    <d:ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/DukNukWpf;component/Themes/ThemeColors/DefaultBlue.xaml" />
        <ResourceDictionary Source="pack://application:,,,/DukNukWpf;component/Themes/ThemeSizes.xaml" />
    </d:ResourceDictionary.MergedDictionaries>
    
    <converters:NukCheckBoxPathConverter x:Key="DukNuk.Converter.CheckBox.Path"/>
    
    <Style 
        x:Key="DukNuk.Style.CheckBox"
        TargetType="{x:Type CheckBox}">
        
        <Setter Property="FocusVisualStyle" Value="{DynamicResource DukNuk.Style.FocusVisual}"/>
        
        <Setter Property="Background" Value="{DynamicResource DukNuk.Colors.Brush.Background.Medium}" />
        <Setter Property="BorderBrush" Value="{DynamicResource DukNuk.Colors.Brush.Border.Light}" />
        <Setter Property="Foreground" Value="{DynamicResource DukNuk.Colors.Brush.Text.Light}" />
        <Setter Property="BorderThickness" Value="{DynamicResource DukNuk.Size.Generic.ControlBorderThickness}" />

        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="{DynamicResource DukNuk.Size.Generic.ControlMargin}" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Width" Value="Auto" />

        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="0" x:Name="border"
                                CornerRadius="4"
                                Width="{DynamicResource DukNuk.Size.CheckBox.Size}"
                                Height="{DynamicResource DukNuk.Size.CheckBox.Size}"
                                Margin="{DynamicResource DukNuk.Size.CheckBox.Margin}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                HorizontalAlignment="Center" 
                                VerticalAlignment="Center"
                                Effect="{DynamicResource DukNuk.Colors.Glow.Control}">
                            <Canvas>
                                <Path x:Name="optionMark" 
                                      Fill="{TemplateBinding Foreground}" 
                                      Opacity="0" 
                                      Stretch="None">
                                    <Path.Data>
                                        <MultiBinding
                                            FallbackValue="M 0,0 L 0,1 L 1,1 L 1,0 Z"
                                            Converter="{StaticResource DukNuk.Converter.CheckBox.Path}"
                                            ConverterParameter="true">
                                            <Binding RelativeSource="{RelativeSource AncestorType=Canvas}" Path="ActualWidth" />
                                            <Binding RelativeSource="{RelativeSource AncestorType=Canvas}" Path="ActualHeight" />
                                        </MultiBinding>
                                    </Path.Data>
                                </Path>
                                <Rectangle x:Name="indeterminateMark" 
                                           Fill="{TemplateBinding Foreground}" 
                                           Margin="{TemplateBinding Padding}" 
                                           Opacity="0"/>
                            </Canvas>
                        </Border>
                        
                        <ContentPresenter Grid.Column="1" 
                                          Focusable="False" 
                                          RecognizesAccessKey="True" 
                                          Margin="{TemplateBinding Padding}"

                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="controls:CheckBoxHelper.RightSideCheckMark" Value="True">
                            <Setter Property="Grid.Column" TargetName="border" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Effect" TargetName="border"
                                    Value="{DynamicResource DukNuk.Colors.Glow.Control.MouseOver}" />
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource DukNuk.Colors.Brush.Border.MouseOver}" />
                            <Setter Property="Fill" TargetName="optionMark" 
                                    Value="{DynamicResource DukNuk.Colors.Brush.Border.Light.Bright}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" 
                                    Value="{DynamicResource DukNuk.Colors.Brush.Border.Light.Bright}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Effect" TargetName="border"
                                    Value="{DynamicResource DukNuk.Colors.Glow.Control.MouseOver}" />
                            <Setter Property="Background"
                                    Value="{DynamicResource DukNuk.Colors.Brush.Background.Dark}" />
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource DukNuk.Colors.Brush.Border.MouseOver}" />
                            <Setter Property="Fill" TargetName="optionMark" 
                                    Value="{DynamicResource DukNuk.Colors.Brush.Border.Light.Bright}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" 
                                    Value="{DynamicResource DukNuk.Colors.Brush.Border.Light.Bright}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Effect" TargetName="border"
                                    Value="{DynamicResource DukNuk.Colors.Glow.Control.Disabled}" />
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource DukNuk.Colors.Brush.Border.Disabled}" />
                            <Setter Property="Background"
                                    Value="{DynamicResource DukNuk.Colors.Brush.Background.Disabled}" />
                            <Setter Property="Fill" TargetName="optionMark" 
                                    Value="{DynamicResource DukNuk.Colors.Brush.Text.Light.Disabled}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" 
                                    Value="{DynamicResource DukNuk.Colors.Brush.Text.Light.Disabled}"/>
                            <Setter Property="Foreground" 
                                    Value="{DynamicResource DukNuk.Colors.Brush.Text.Light.Disabled}"/>
                        </Trigger>
                        
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>